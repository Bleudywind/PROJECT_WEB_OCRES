'use strict';

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }

function _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }

var AuthHandler = require('../utils/auth-handler');

var _require = require('../package.json'),
    version = _require.version;

var VersionHandler = /*#__PURE__*/function () {
  function VersionHandler() {
    var authHandler = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : new AuthHandler(false);

    _classCallCheck(this, VersionHandler);

    this.authHandler = authHandler;
    this.result = version;
  }

  _createClass(VersionHandler, [{
    key: "getResult",
    value: function getResult() {
      return this.result;
    }
  }]);

  return VersionHandler;
}();

module.exports = VersionHandler;